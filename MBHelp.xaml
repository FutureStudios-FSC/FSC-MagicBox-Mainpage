<!-- 这是 PCL 的主页自定义文件。你可以通过修改这个文件来自定义 PCL 主页：添加文本、打开网页、启动游戏，等等。
     如果你倒腾这个文件把 PCL 玩炸了，把这个文件直接删除就行了。
     下列内容均基于 WPF 框架。你可以在继续之前先尝试自学 XAML 与 WPF 的基础，这能让你更轻松地理解下列内容。
     你也可以使用 Ctrl + F 快速查找。例如，若需要改变文本颜色，则搜索 “颜色” 即可。 -->

<local:MyHint IsWarn="False" Text="由FSC Team制作和维护。" EventType="弹出窗口" EventData="关于|该功能基于PCL II的‘读取本地文件’自定义主页功能。\n你也可以学习制作Custom.xaml！\nPCL II中，打开设置-个性化，找到‘主页’，选择‘读取本地文件’\n来生成教学文件到PCL文件夹。" Margin="0,0,0,10" />

<local:MyHint IsWarn="True" Text="该主页存储在http://xxag.top，该网站还包含了部分网页的CSS、JS以及大量重要文件。请不要攻击或进行压力测试，也不要试图把服务器挤爆！" Margin="0,0,0,10" />

<local:MyCard Title="MagicBox主页使用说明" Margin="0,0,0,15" CanSwap="True" IsSwaped="False">
    <StackPanel Margin="25,40,23,15">
        
        <TextBlock Text="首先打开PCL2的设置界面，打开个性化-主页。&#xA;在主页中，如图先选择‘联网更新’，将MagicBox主页的地址填入文本框。&#xA;在投稿完毕后，如果做这运气好，就可以在预设中找到了···吧？" Margin="0,10,0,20"/>
        
        <Image Source="http://xxag.top/FSC Statics/Misc/Image/step1.png" Width="762.4" Height="496.8" Margin="0,0,0,0"/>
        
        <Grid>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="1*" />
        		<ColumnDefinition Width="1.6*" MinWidth="200" />
        		<!-- 第二个按钮的宽度是第一个按钮的 1.6 倍，且至少为 200 -->
        		<ColumnDefinition Width="150" />
        		<!-- 如果不打 *，则会占用固定的宽度，也可以写 Auto 来自适应 -->
        	</Grid.ColumnDefinitions>
        	
        	<!-- 为按钮添加 Grid.Column 属性指定它所在的列，不要添加 Width 与 HorizontalAlignment 属性 -->
            <local:MyButton Grid.Column="2" Margin="10,0,0,0" Height="35" ColorType="Highlight"
                Text="复制MagicBox网址" ToolTip="http://xxag.top/FSC Statics/Misc/MagicBox.xaml" EventType="复制文本" EventData="http://xxag.top/FSC Statics/Misc/MagicBox.xaml"/>
                
                
        </Grid>
        

    </StackPanel>
</local:MyCard>

<local:MyCard Title="特别感谢" Margin="0,0,0,15" CanSwap="True" IsSwaped="False">
    <StackPanel Margin="25,40,23,15">
        
        <local:MyListItem
            Logo="https://avatars.githubusercontent.com/u/103323756?v=4"
            Title="MFn233" Info="PCL‘简单主页’作者，为MB主页提供了技术支持！" EventType="打开网页" EventData="https://github.com/MFn233" Type="Clickable" />

    </StackPanel>
</local:MyCard>

<!-- 
全部通用的属性：
 - Width、Height：设置宽度与高度
 - ToolTip：设置鼠标指向时的提示文本
 - Margin：调整外边距（格式为 左,上,右,下。例如 Margin="0,0,0,2" 即为 2 单位的下边距）
 - HorizontalAlignment：设置横向对齐方式，居左：Left、居中：Center、居右：Right、拉伸（默认）：Stretch
 - VerticalAlignment：设置纵向对齐方式，居上：Top、居中：Center、居下：Bottom、拉伸（默认）：Stretch
 - IsHitTestVisible：该控件是否响应交互（点击、指向动画等），True 为是（默认），False 为否

TextBlock（纯文本）：
 - Text：设置显示的文本（如果要使用引号等特殊字符，自行百度 XAML 转义）
 - TextWrapping：开启自动换行
 - FontSize：设置字号
 - FontWeight：设置为 Bold 时，文字加粗
 - Foreground：调整前景颜色（十六进制字符串，例如 #FF010203 代表 ARGB 中的 255,1,2,3。前两位代表不透明度，FF 为全不透明，00 为全透明）

Image（图片）：
 - Source：要显示的图片的网址，或 PCL 内置图片位置

local:MyCard（卡片）：
 - Title：设置显示的标题文本
 - CanSwap：卡片是否可以折叠，True 为是，False 为否
 - IsSwaped：卡片是否默认折叠，要求 CanSwap 必须为 True
 - HorizontalAlignment：若使用，要求 CanSwap 必须为 False
 - UseAnimation：是否在展开等高度改变时触发动画，True 为是（默认），False 为否
 - SwapLogoRight：卡片折叠时的箭头是朝下还是朝右，True 为朝右，False 为朝下（默认）
 - HasMouseAnimation：是否在鼠标指向时改变卡片颜色，True 为是（默认），False 为否

local:MyHint（提示条）：
 - Text：设置显示的文本（&#xA; 代表换行）
 - IsWarn：设置为 True 代表警告样式，False 代表提示样式

local:MyButton（按钮）：
 - Text：设置显示的文本
 - Padding：设置内边距，格式与 Margin 一致
 - ColorType：设置颜色主题（Highlight 为当前启动器的主题颜色，Red 为红色，默认为黑色）
 - EventType、EventData：触发特定事件

local:MyTextButton（文本按钮）：
 - Text：设置显示的文本
 - EventType、EventData：触发特定事件

local:MyListItem（列表项）：
 - Logo：列表项的图标（所指定的可以是链接也可以是文件路径）
 - Title：列表项的大标题
 - Info：列表项的详细信息，它将会以灰色显示在大标题下方
 - Type：若留空仅单纯展示信息，设置为 Clickable 触发相应活动

local:MyIconTextButton（带图标的按钮）：
 - Text：设置显示的文本
 - Logo：设置显示的图标
 - LogoScale：设置图标的缩放，默认为 1
 - ColorType：设置颜色主题（Highlight 为当前启动器的主题颜色，默认为黑色）
 - EventType、EventData：触发特定事件

local:MyIconButton（图标按钮）：
 - Logo：设置显示的图标
 - LogoScale：设置图标的缩放，默认为 1
 - Theme：设置颜色主题，Color（默认）为当前启动器的主题颜色，也可设置为 White、Black、Red
 - EventType、EventData：触发特定事件

-->
